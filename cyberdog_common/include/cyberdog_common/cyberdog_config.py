# Copyright (c) 2021 Beijing Xiaomi Mobile Software Co., Ltd. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
from asyncore import read, write
from tkinter import N
from numpy import isin
import toml


def write_struct(file, name=None):
  if(name is not None):
    file.write("struct " + name)
    file.write("\n{\n")
  else:
    file.write("\n};\n")


def read_data(filepath) -> dict:
  print(filepath)
  with open(filepath) as f_data:
    config_data = toml.loads(f_data.read())
    print(isinstance(config_data['a']['a'], int))
  return config_data
  

def write_variable(file, data):
  if isinstance(data, int):
    file.write("int ")
    file.write(data)


def write_dict(file, data):
  print(file , data)
  for d in data:
      # file.write(d)
      # file.write("\n")
    write_variable(file, d)


def write_list(file, data):
  for d in data:
    if isinstance(d, list):
      return write_list(file, d)
    elif isinstance(d, dict):
      return write_dict(file, d)


def create_hpp(hpp_data):
  hpp_file = "config_test.py"
  with open(hpp_file, 'w') as f:
    f.write("# this is generated by cyberdog\n")
    f.write("def get_config_test():\n")
    f.write("\treturn " + str(hpp_data))
     
  import config_test
  data = config_test.get_config_test()
  print(toml.dumps(data))


if __name__ == '__main__':
  data = read_data("../../test/benchmark.toml")
  print(data)
  create_hpp(data)
